{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nandini\\\\bank-account-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllAccounts, createAccount } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [accounts, setAccounts] = useState([]); //creating empty array\n  //below insterting the data fetched from backend\n  const [formData, setFormData] = useState({\n    accountHolderName: \"\",\n    accountType: \"savings\",\n    balance: \"\"\n  });\n  useEffect(() => {\n    fetchAccounts();\n  }, []);\n  const fetchAccounts = () => {\n    getAllAccounts().then(data => {\n      console.log(\"Fetched accounts:\", data);\n      if (Array.isArray(data)) {\n        setAccounts(data);\n      } else if (data && Array.isArray(data.content)) {\n        // Handle paged response like { content: [...], totalPages: X }\n        setAccounts(data.content);\n      } else {\n        console.error(\"Unexpected data format:\", data);\n        setAccounts([]); // avoid crashing UI\n      }\n    }).catch(err => {\n      console.error(\"Error fetching accounts:\", err);\n      setAccounts([]); // fallback\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const payload = {\n      ...formData,\n      balance: parseFloat(formData.balance)\n    };\n    createAccount(payload).then(() => {\n      fetchAccounts(); // refresh list\n      setFormData({\n        accountHolderName: \"\",\n        accountType: \"savings\",\n        balance: \"\"\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginBottom: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"accountHolderName\",\n        value: formData.accountHolderName,\n        onChange: handleChange,\n        placeholder: \"Account Holder Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"accountType\",\n        value: formData.accountType,\n        onChange: handleChange,\n        style: {\n          marginLeft: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"savings\",\n          children: \"Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"current\",\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"balance\",\n        value: formData.balance,\n        onChange: handleChange,\n        type: \"number\",\n        placeholder: \"Initial Balance\",\n        style: {\n          marginLeft: \"1rem\"\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginLeft: \"1rem\"\n        },\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Existing Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(accounts) && accounts.map(account => {\n        var _account$balance;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [account.accountHolderName, \" \\u2014 \", account.accountType, \" \\u2014 \\u20B9\", (_account$balance = account.balance) !== null && _account$balance !== void 0 ? _account$balance : 0]\n        }, account.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F7150qM9AUmGbRclpJIsVNFfnUk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","getAllAccounts","createAccount","jsxDEV","_jsxDEV","App","_s","accounts","setAccounts","formData","setFormData","accountHolderName","accountType","balance","fetchAccounts","then","data","console","log","Array","isArray","content","error","catch","err","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","payload","parseFloat","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","onChange","placeholder","required","marginLeft","type","map","account","_account$balance","id","_c","$RefreshReg$"],"sources":["C:/Users/Nandini/bank-account-ui/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getAllAccounts, createAccount } from \"./services/api\";\n\nfunction App() {\n  const [accounts, setAccounts] = useState([]);//creating empty array\n  //below insterting the data fetched from backend\n  const [formData, setFormData] = useState({\n    accountHolderName: \"\",\n    accountType: \"savings\",\n    balance: \"\"\n  });\n\n  useEffect(() => {\n    fetchAccounts();\n  }, []);\n\n  const fetchAccounts = () => {\n\tgetAllAccounts().then(data => {\n\tconsole.log(\"Fetched accounts:\", data);\n\tif (Array.isArray(data)) {\n\t\tsetAccounts(data);\n\t} else if (data && Array.isArray(data.content)) {\n\t// Handle paged response like { content: [...], totalPages: X }\n\t\tsetAccounts(data.content);\n\t} else {\n\t\tconsole.error(\"Unexpected data format:\", data);\n\t\tsetAccounts([]); // avoid crashing UI\n\t}\n  }).catch(err => {\n  console.error(\"Error fetching accounts:\", err);\n  setAccounts([]); // fallback\n  });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\tconst payload = {\n    ...formData,\n    balance: parseFloat(formData.balance)\n\t};\n    createAccount(payload).then(() => {\n      fetchAccounts(); // refresh list\n      setFormData({\n        accountHolderName: \"\",\n        accountType: \"savings\",\n        balance: \"\"\n      });\n    });\n  };\n\n  return (\n    <div style={{ padding: \"2rem\" }}>\n      <h2>Create New Account</h2>\n      <form onSubmit={handleSubmit} style={{ marginBottom: \"2rem\" }}>\n        <input\n          name=\"accountHolderName\"\n          value={formData.accountHolderName}\n          onChange={handleChange}\n          placeholder=\"Account Holder Name\"\n          required\n        />\n        <select\n          name=\"accountType\"\n          value={formData.accountType}\n          onChange={handleChange}\n          style={{ marginLeft: \"1rem\" }}\n        >\n          <option value=\"savings\">Savings</option>\n          <option value=\"current\">Current</option>\n        </select>\n        <input\n          name=\"balance\"\n          value={formData.balance}\n          onChange={handleChange}\n          type=\"number\"\n          placeholder=\"Initial Balance\"\n          style={{ marginLeft: \"1rem\" }}\n          required\n        />\n        <button type=\"submit\" style={{ marginLeft: \"1rem\" }}>Create</button>\n      </form>\n\n      <h2>Existing Accounts</h2>\n      <ul>\n        {Array.isArray(accounts) && accounts.map((account) => ( \n          <li key={account.id}>\n            {account.accountHolderName} — {account.accountType} — ₹{account.balance ?? 0} \n\t\t  </li> \n\t\t  ))\n\t\t } \n\t  </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}