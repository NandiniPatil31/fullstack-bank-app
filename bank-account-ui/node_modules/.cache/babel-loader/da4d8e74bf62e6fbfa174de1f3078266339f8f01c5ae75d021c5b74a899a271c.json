{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nandini\\\\bank-account-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllAccounts, createAccount } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [accounts, setAccounts] = useState([]); //creating empty array\n  //below insterting the data fetched from backend\n  const [formData, setFormData] = useState({\n    accountHolderName: \"\",\n    accountType: \"savings\",\n    balance: \"\"\n  });\n  useEffect(() => {\n    fetchAccounts();\n  }, []);\n  const fetchAccounts = () => {\n    getAllAccounts().then(data => {\n      console.log(\"Fetched accounts:\", data); // debug\n\n      if (Array.isArray(data)) {\n        setAccounts(data); // case: backend returns a raw list\n      } else if (data && Array.isArray(data.content)) {\n        setAccounts(data.content); // case: paged Spring Data JPA response\n      } else if (data && typeof data === 'object') {\n        const possibleArray = Object.values(data).find(val => Array.isArray(val));\n        if (possibleArray) {\n          setAccounts(possibleArray);\n        } else {\n          console.error(\"Unexpected structure — no array found:\", data);\n          setAccounts([]);\n        }\n      } else {\n        console.error(\"Completely unrecognized data:\", data);\n        setAccounts([]);\n      }\n    }).catch(err => {\n      console.error(\"Error fetching accounts:\", err);\n      setAccounts([]); // fallback\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const payload = {\n      ...formData,\n      balance: parseFloat(formData.balance)\n    };\n    console.log(\"Submitting:\", payload); // ✅ Inspect payload\n    createAccount(payload).then(() => {\n      fetchAccounts(); // refresh list\n      setFormData({\n        accountHolderName: \"\",\n        accountType: \"savings\",\n        balance: \"0\"\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginBottom: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"accountHolderName\",\n        value: formData.accountHolderName,\n        onChange: handleChange,\n        placeholder: \"Account Holder Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"accountType\",\n        value: formData.accountType,\n        onChange: handleChange,\n        style: {\n          marginLeft: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"savings\",\n          children: \"Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"current\",\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"balance\",\n        value: formData.balance,\n        onChange: handleChange,\n        type: \"number\",\n        placeholder: \"Initial Balance\",\n        step: \"0.01\",\n        style: {\n          marginLeft: \"1rem\"\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginLeft: \"1rem\"\n        },\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Existing Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(accounts) && accounts.map(account => {\n        var _account$balance;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [account.accountHolderName, \" \\u2014 \", account.accountType, \" \\u2014 \\u20B9\", (_account$balance = account.balance) !== null && _account$balance !== void 0 ? _account$balance : 0]\n        }, account.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F7150qM9AUmGbRclpJIsVNFfnUk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","getAllAccounts","createAccount","jsxDEV","_jsxDEV","App","_s","accounts","setAccounts","formData","setFormData","accountHolderName","accountType","balance","fetchAccounts","then","data","console","log","Array","isArray","content","possibleArray","Object","values","find","val","error","catch","err","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","payload","parseFloat","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","onChange","placeholder","required","marginLeft","type","step","map","account","_account$balance","id","_c","$RefreshReg$"],"sources":["C:/Users/Nandini/bank-account-ui/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getAllAccounts, createAccount } from \"./services/api\";\n\nfunction App() {\n  const [accounts, setAccounts] = useState([]);//creating empty array\n  //below insterting the data fetched from backend\n  const [formData, setFormData] = useState({\n    accountHolderName: \"\",\n    accountType: \"savings\",\n    balance: \"\"\n  });\n\n  useEffect(() => {\n    fetchAccounts();\n  }, []);\n\n  const fetchAccounts = () => {\n  getAllAccounts()\n    .then(data => {\n      console.log(\"Fetched accounts:\", data); // debug\n\n      if (Array.isArray(data)) {\n        setAccounts(data); // case: backend returns a raw list\n      } else if (data && Array.isArray(data.content)) {\n        setAccounts(data.content); // case: paged Spring Data JPA response\n      } else if (data && typeof data === 'object') {\n        const possibleArray = Object.values(data).find(val => Array.isArray(val));\n        if (possibleArray) {\n          setAccounts(possibleArray);\n        } else {\n          console.error(\"Unexpected structure — no array found:\", data);\n          setAccounts([]);\n        }\n      } else {\n        console.error(\"Completely unrecognized data:\", data);\n        setAccounts([]);\n      }\n    })\n    .catch(err => {\n      console.error(\"Error fetching accounts:\", err);\n      setAccounts([]); // fallback\n    });\n\t};\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\tconst payload = {\n    ...formData,\n    balance: parseFloat(formData.balance)\n\t};\n\tconsole.log(\"Submitting:\", payload);  // ✅ Inspect payload\n    createAccount(payload).then(() => {\n      fetchAccounts(); // refresh list\n      setFormData({\n        accountHolderName: \"\",\n        accountType: \"savings\",\n        balance: \"0\"\n      });\n    });\n  };\n\n  return (\n    <div style={{ padding: \"2rem\" }}>\n      <h2>Create New Account</h2>\n      <form onSubmit={handleSubmit} style={{ marginBottom: \"2rem\" }}>\n        <input\n          name=\"accountHolderName\"\n          value={formData.accountHolderName}\n          onChange={handleChange}\n          placeholder=\"Account Holder Name\"\n          required\n        />\n        <select\n          name=\"accountType\"\n          value={formData.accountType}\n          onChange={handleChange}\n          style={{ marginLeft: \"1rem\" }}\n        >\n          <option value=\"savings\">Savings</option>\n          <option value=\"current\">Current</option>\n        </select>\n        <input\n          name=\"balance\"\n          value={formData.balance}\n          onChange={handleChange}\n          type=\"number\"\n          placeholder=\"Initial Balance\"\n\t\t  step=\"0.01\"\n          style={{ marginLeft: \"1rem\" }}\n          required\n        />\n        <button type=\"submit\" style={{ marginLeft: \"1rem\" }}>Create</button>\n      </form>\n\n      <h2>Existing Accounts</h2>\n      <ul>\n        {Array.isArray(accounts) && accounts.map((account) => ( \n          <li key={account.id}>\n            {account.accountHolderName} — {account.accountType} — ₹{account.balance ?? 0} \n\t\t  </li> \n\t\t  ))\n\t\t } \n\t  </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}